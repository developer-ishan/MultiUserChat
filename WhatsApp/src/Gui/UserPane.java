/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import Client.ChatClient;
import Client.MessageListener;
import Client.UserStatusListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author ishan
 */
public class UserPane extends javax.swing.JPanel implements UserStatusListener, MessageListener{

    ChatClient client;
    ActionListener userSelection;
    HashMap <String , UserCard> userList; 
    /**
     * Creates new form UserPane
     */
    public UserPane(ChatClient client, Dashboard dashboard) {
        initComponents();
        client.addMessageListener(this);
        client.addUserStatusListener(this);
        userList = new HashMap <String , UserCard>();
        this.client = client;
        userSelection = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                String selectedUser = ae.getActionCommand();
                dashboard.setMessagePane(selectedUser);
            }
        };
        ResultSet usersHistory = client.db.getUsers();
        try {
            while (usersHistory.next()){
                String uName = usersHistory.getString("name");
                UserCard card = new UserCard(uName,"offline",userSelection);
                userListPane.add(card);  
                userList.put(uName, card);
            }
        } catch (SQLException e){
            e.printStackTrace();
        }
        userListPane.revalidate();
        userListPane.repaint();
        client.startMessageReader();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userListPane = new javax.swing.JPanel();

        setBackground(new java.awt.Color(49, 47, 123));

        jPanel2.setBackground(new java.awt.Color(49, 47, 123));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Users");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 305, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        userListPane.setBackground(new java.awt.Color(49, 47, 123));
        userListPane.setLayout(new javax.swing.BoxLayout(userListPane, javax.swing.BoxLayout.Y_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userListPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel userListPane;
    // End of variables declaration//GEN-END:variables

    @Override
    public void online(String login) {
        if(userList.containsKey(login)){
           userList.get(login).online();
        } else{
            UserCard card = new UserCard(login,"online",userSelection);
            userList.put(login, card);
        }
        userListPane.removeAll();
        for (Map.Entry<String,UserCard> entry : userList.entrySet())  {
            userListPane.add(entry.getValue());
        }
        userListPane.revalidate();
        userListPane.repaint();
    }

    @Override
    public void offline(String login) {
        if(userList.containsKey(login)){
            userList.get(login).offline();
        }
    }

    @Override
    public void onMessage(String from, String msgBody) {
        userList.get(from).newMessage();
    }
}
